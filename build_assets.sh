#!/usr/bin/env bash

COMMENT="
/*
DO NOT EDIT
Autogenerated file by \`build_assets.sh\` at $(date).
*/
"

# build filePath package constName
build() {
    FILEPATH="$1"
    FILEGO=${FILEPATH}.go
    PACKAGE="$2"
    CONST="$3"

    [[ ! -f ${FILEPATH} ]] && echo "couldn't find ${FILEPATH}, skipping" && return

    cat > "${FILEGO}" <<EOF
package ${PACKAGE}
${COMMENT}
// ${CONST} - bundled asset, name should be self explanatory
const ${CONST} = \`
$(sed 's/`/` + "`" + `/' "${FILEPATH}")
\`
EOF
}

prebuild() {
    F="$1"
    PACKAGE=$(cut -d ":" -f1 <<< "$F")
    FILENAME=$(cut -d ":" -f2 <<< "$F")
    CONST=$(cut -d ":" -f3 <<< "$F")
    FILEPATH="./assets/${PACKAGE}/${FILENAME}"
    build "${FILEPATH}" "${PACKAGE}" "${CONST}"
}

if [[ ! -z $1 ]]
then
    prebuild "$1"
    exit 0
fi

# directory:filename.ext:constName
FILES=(
    css:hack.min.css:HackCSS
    css:hack-dark.min.css:HackDarkCSS
    css:custom.css:CustomCSS

    templates:404.html:HTML404
    templates:list.html:HTMLDirList
    templates:header.html:HTMLHeader
    templates:footer.html:HTMLFooter
    templates:about.html:HTMLAbout
    templates:pass.html:HTMLPassForm
)

for F in "${FILES[@]}"
do
    prebuild "$F"
done
